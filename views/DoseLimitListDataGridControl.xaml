<UserControl x:Class="nnunet_client.views.DoseLimitListDataGridControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:models="clr-namespace:nnunet_client.models"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="1000"
             x:Name="rootControl">

    <UserControl.Resources>
        <ResourceDictionary>

            <Style x:Key="RowTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="5,0"/>
            </Style>

            <Style x:Key="RowTextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="5,0"/>
            </Style>

            <Style x:Key="RowComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ResultTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource RowTextBlockStyle}">
                <Style.Triggers>
                    <!-- Trigger for "Pass" -->
                    <DataTrigger Binding="{Binding Result}" Value="Pass">
                        <Setter Property="Foreground" Value="Green" />
                    </DataTrigger>

                    <!-- Trigger for "Fail" -->
                    <DataTrigger Binding="{Binding Result}" Value="Fail">
                        <Setter Property="Foreground" Value="Red" />
                    </DataTrigger>

                    <!-- Trigger for "Acceptable" -->
                    <DataTrigger Binding="{Binding Result}" Value="Acceptable">
                        <Setter Property="Foreground" Value="Blue" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="LimitTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource RowTextBlockStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding LimitValid}" Value="False">
                        <Setter Property="Foreground" Value="Red"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="LimitTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource RowTextBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding LimitValid}" Value="False">
                        <Setter Property="Foreground" Value="Red"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
            </Style>

            <Style x:Key="ToolBarIconStyle" TargetType="{x:Type iconPacks:PackIconMaterial}">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Table -->
        <DataGrid Grid.Row="0"
                  x:Name="RootDataGrid"
                  ItemsSource="{Binding DoseLimits}"
                  SelectedItem="{Binding SelectedDoseLimit}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False">
            <DataGrid.Columns>

                <DataGridTextColumn Header="Priority"
                     Binding="{Binding Priority, Mode=TwoWay}"
                     ElementStyle="{StaticResource RowTextBlockStyle}"   
                     EditingElementStyle="{StaticResource RowTextBoxStyle}"   
                     Width="40"/>

                <DataGridTextColumn Header="ID"
                    Binding="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ElementStyle="{StaticResource RowTextBlockStyle}"   
                    EditingElementStyle="{StaticResource RowTextBoxStyle}"   
                    Width="*"/>

                <DataGridTemplateColumn Header="Plan Contour" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Contour.Id}" Style="{StaticResource RowTextBlockStyle}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox 
                                ItemsSource="{Binding DataContext.Contours, ElementName=rootControl}"
                                DisplayMemberPath="Id"
                                SelectedItem="{Binding Contour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource RowComboBoxStyle}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <!-- no contour type for now... not sure where it is used...
                <DataGridTemplateColumn Header="Contour Type">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ContourType}" VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox 
                                SelectedItem="{Binding ContourType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                ItemsSource="{x:Static models:EnumHelper.DoseLimitContourTypes}"
                                      />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                -->
                <DataGridTemplateColumn Header="Prescription" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                Text="{Binding Prescription.Id}" 
                                Style="{StaticResource RowTextBlockStyle}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox 
                                ItemsSource="{Binding DataContext.Prescriptions, ElementName=rootControl}"
                                DisplayMemberPath="Id"
                                SelectedItem="{Binding Prescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource RowComboBoxStyle}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Limit"
                    Binding="{Binding Limit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ElementStyle="{StaticResource LimitTextBlockStyle}"   
                    EditingElementStyle="{StaticResource LimitTextBoxStyle}"   
                    Width="*"/>

                <DataGridTextColumn 
                    Header="Value"
                    Binding="{Binding Value.Display, Mode=OneWay}"
                    ElementStyle="{StaticResource ResultTextBlockStyle}"   
                    Width="*"/>

                <DataGridTextColumn 
                    Header="Result"
                    Binding="{Binding Result, Mode=OneWay}"
                    ElementStyle="{StaticResource ResultTextBlockStyle}"
                    Width="*"/>

                <DataGridTextColumn Header="Comments"
                    Binding="{Binding Comments, Mode=TwoWay}"
                                    ElementStyle="{StaticResource RowTextBlockStyle}"   
                                    EditingElementStyle="{StaticResource RowTextBoxStyle}"
                    Width="*"/>

                <DataGridTextColumn Header="Error"
                    Binding="{Binding ErrorMessage, Mode=OneWay}"
                                    Foreground="Red"
                                    ElementStyle="{StaticResource RowTextBlockStyle}"
                    Width="*"/>

            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0">
            <Button ToolTip="Add"
			Command="{Binding AddCommand}"
			Style="{StaticResource ToolBarButtonStyle}"
            >
                <iconPacks:PackIconMaterial Kind="Plus" Style="{StaticResource ToolBarIconStyle}"/>
            </Button>
            <Button ToolTip="Remove"
			Command="{Binding RemoveCommand}"
            Style="{StaticResource ToolBarButtonStyle}"
			>
                <iconPacks:PackIconMaterial Kind="Minus" Style="{StaticResource ToolBarIconStyle}" />
            </Button>
            <Button ToolTip="Duplicate"
		Command="{Binding DuplicateCommand}"
            Style="{StaticResource ToolBarButtonStyle}"
		>
                <iconPacks:PackIconMaterial Kind="ContentDuplicate" Style="{StaticResource ToolBarIconStyle}"/>
            </Button>
            <Button ToolTip="Save"
            Command="{Binding SaveCommand}"
            Style="{StaticResource ToolBarButtonStyle}"
            Visibility="{Binding SaveLoadButtonsVisibility}"
            >
                <iconPacks:PackIconMaterial Kind="ContentSave" Style="{StaticResource ToolBarIconStyle}"/>
            </Button>
            <Button ToolTip="Load"
             Command="{Binding LoadCommand}"
            Style="{StaticResource ToolBarButtonStyle}"  
            Visibility="{Binding SaveLoadButtonsVisibility}"
            
            >
                <iconPacks:PackIconMaterial Kind="FolderOpen" Style="{StaticResource ToolBarIconStyle}"/>
            </Button>
        </StackPanel>

    </Grid>
</UserControl>